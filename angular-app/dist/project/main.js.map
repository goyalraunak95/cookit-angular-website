{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication/authentication.component.ts","./src/app/authentication/authentication.component.html","./src/app/authentication/authentication.guard.ts","./src/app/authentication/authentication.interceptor.ts","./src/app/authentication/authentication.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/purchased-ingred-list/purchased-ingred-list.component.ts","./src/app/purchased-ingred-list/purchased-ingred-list.component.html","./src/app/recipes/comment.model.ts","./src/app/recipes/recipe-detail/comment-list/comment-item/comment-item.component.ts","./src/app/recipes/recipe-detail/comment-list/comment-item/comment-item.component.html","./src/app/recipes/recipe-detail/comment-list/comment-list.component.ts","./src/app/recipes/recipe-detail/comment-list/comment-list.component.html","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/app/recipes/recipe-edit/recipe-edit.component.ts","./src/app/recipes/recipe-edit/recipe-edit.component.html","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/recipes/recipe.model.ts","./src/app/recipes/recipe.service.ts","./src/app/recipes/recipes-resolver.service.ts","./src/app/recipes/recipes-start/recipes-start.component.ts","./src/app/recipes/recipes-start/recipes-start.component.html","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/shared/alert.component.ts","./src/app/shared/alert.component.html","./src/app/shared/data-store.service.ts","./src/app/shared/dropdown.directive.ts","./src/app/shared/filter-bookmark.pipe.ts","./src/app/shared/ingrediant.model.ts","./src/app/shared/loading-spinner/loading-spinner.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html","./src/app/shopping-list/shopping-list.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import{ NgModule } from '@angular/core'\r\nimport{ Routes, RouterModule} from '@angular/router'\r\n\r\nimport { RecipesComponent } from './recipes/recipes.component'\r\nimport { RecipesStartComponent } from './recipes/recipes-start/recipes-start.component'\r\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component'\r\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component'\r\nimport { RecipesResolverService } from './recipes/recipes-resolver.service'\r\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component'\r\nimport { AuthenticationGuard } from './authentication/authentication.guard'\r\nimport { PurchasedIngredListComponent } from './purchased-ingred-list/purchased-ingred-list.component'\r\nimport { AuthenticationComponent } from './authentication/authentication.component'\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: '/recipes', pathMatch: 'full' },\r\n    { \r\n        path: 'recipes', \r\n        component: RecipesComponent, \r\n        canActivate: [AuthenticationGuard],\r\n        children: [\r\n            { path: '', component: RecipesStartComponent, pathMatch: 'full' },\r\n            { path: 'new', component: RecipeEditComponent },\r\n            { \r\n                path: ':id', \r\n                component: RecipeDetailComponent, \r\n                resolve: [RecipesResolverService] \r\n            }, \r\n            { \r\n                path: ':id/edit', \r\n                component: RecipeEditComponent, \r\n                resolve: [RecipesResolverService] \r\n            }, \r\n        ], \r\n        resolve: [RecipesResolverService]\r\n    },\r\n    { path: 'shopping-list', component: ShoppingListComponent, canActivate: [AuthenticationGuard] },\r\n    { path: 'authentication', component: AuthenticationComponent},\r\n    { path: 'purchased', component: PurchasedIngredListComponent, canActivate: [AuthenticationGuard] }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule{\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './authentication/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authenticationService: AuthenticationService){}\n  \n  ngOnInit(){\n    this.authenticationService.autoLogin()\n  }\n}\n","<app-header></app-header>\n<div class=\"main\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RecipeService } from './recipes/recipe.service';\nimport { ShoppingListService } from './shopping-list/shopping-list.service';\nimport { AppRoutingModule } from './app-routing.module'\nimport { RecipesComponent } from './recipes/recipes.component'\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component'\nimport { RecipeDetailComponent } from './recipes/recipe-detail/recipe-detail.component'\nimport { RecipeItemComponent } from './recipes/recipe-list/recipe-item/recipe-item.component'\nimport { RecipesStartComponent } from './recipes/recipes-start/recipes-start.component'\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component'\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component'\nimport { ShoppingEditComponent } from './shopping-list/shopping-edit/shopping-edit.component'\nimport { DropdownDirective } from './shared/dropdown.directive'\nimport { AlertComponent } from './shared/alert.component'\nimport { LoadingSpinnerComponent } from './shared/loading-spinner/loading-spinner.component' \nimport { CommentListComponent } from './recipes/recipe-detail/comment-list/comment-list.component';\nimport { CommentItemComponent } from './recipes/recipe-detail/comment-list/comment-item/comment-item.component';\nimport { PurchasedIngredListComponent } from './purchased-ingred-list/purchased-ingred-list.component';\nimport { AuthenticationComponent } from './authentication/authentication.component';\nimport { AuthenticationInterceptor } from './authentication/authentication.interceptor';\nimport { FilterBookmarkPipe } from './shared/filter-bookmark.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeDetailComponent,\n    RecipeItemComponent,\n    RecipesStartComponent,\n    RecipeEditComponent,\n    ShoppingListComponent,\n    ShoppingEditComponent,\n    DropdownDirective,\n    AlertComponent,\n    LoadingSpinnerComponent,\n    CommentListComponent,\n    CommentItemComponent,\n    PurchasedIngredListComponent,\n    AuthenticationComponent,\n    FilterBookmarkPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [RecipeService,ShoppingListService, \n              {provide: HTTP_INTERCEPTORS, \n              useClass: AuthenticationInterceptor, \n              multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\nimport { AuthenticationService } from './authentication.service'\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.css']\n})\nexport class AuthenticationComponent implements OnInit {\n\n  isLoginMode = false;\n  isLoading = false;\n  error: string = null;\n  constructor(private authenticationService: AuthenticationService, \n    private router: Router, \n    private shoppingListService: ShoppingListService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSwitchMode(){\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(authenticationForm: NgForm) {\n    this.isLoading = true;\n    this.error = null;\n    this.shoppingListService.ingrediants = []\n    \n    if(this.isLoginMode)\n    {\n      this.authenticationService.login(authenticationForm.value)\n      .subscribe(\n        () => {\n          this.isLoading = false\n          this.router.navigate(['/recipes'])\n        }, \n        errorres => {\n          this.error = errorres\n          this.isLoading = false\n        }\n      )\n    }\n    else\n    {\n      this.authenticationService.signUp(authenticationForm.value)\n      .subscribe(\n        () => {\n          this.isLoading = false\n          this.router.navigate(['/recipes'])\n        }, \n        (errorres) => {\n          this.error = errorres\n          this.isLoading = false\n        }\n      )\n    }\n  }\n\n  onHandleError(){\n    this.error=null;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12 col-md-6 col-md-offset-5\">\n        <!-- <div class=\"alert alert-danger\" *ngIf = \"error\">\n            <p>\n                {{ error }}\n            </p>\n        </div> -->\n        <app-alert [message] = \"error\" *ngIf = \"error!=null\" (close) = onHandleError()></app-alert>\n        <div *ngIf = \"isLoading\">\n            <app-loading-spinner></app-loading-spinner>\n        </div>\n        <form (ngSubmit) = onSubmit(f) #f = \"ngForm\" *ngIf = \"!isLoading\">\n            <div class=\"form-group\">\n                <label>Username\n                    <input \n                    type=\"text\" \n                    class=\"form-control\" \n                    name=\"name\" \n                    [ngModel]=\"isLoginMode?'User_1':''\" \n                    required \n                    placeholder=\"Username\">\n                </label>\n            </div>\n            <div class=\"form-group\"  *ngIf = \"!isLoginMode\">\n                <label>E-Mail\n                    <input \n                    type=\"text\" \n                    class=\"form-control\" \n                    name=\"email\" \n                    ngModel \n                    required \n                    email \n                    placeholder=\"xyz@gmail.com\">\n                </label>\n            </div>\n            <div class=\"form-group\">\n                <label>\n                    Password\n                    <input \n                    type=\"password\" \n                    class=\"form-control\" \n                    name=\"password\"\n                    [ngModel]=\"isLoginMode?'123456':''\" \n                    required \n                    minlength=\"6\" \n                    placeholder=\"Minimum 6 digits\">\n                </label>\n            </div>\n            <div>\n                <button class=\"btn btn-primary\" \n                type=\"submit\" \n                [disabled] = \"!f.valid\">\n                {{ isLoginMode ? \"Login\" : \"Sign Up\" }}\n            </button>\n             | \n             <button class=\"btn btn-primary\" \n             type=\"button\" \n             (click) = onSwitchMode()>\n             Switch To {{ isLoginMode ? \"Sign Up\" : \"Login\" }}\n            </button>\n            </div>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../authentication/authentication.service'\nimport { take,map } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private authenticationService: AuthenticationService, \n              private router: Router){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      return this.authenticationService.isUserAuthenticated\n      .pipe(take(1), map(\n        (isAuthenticated) => {\n          if(route.routeConfig.path === \"authentication\" && isAuthenticated)\n            return this.router.createUrlTree(['/recipes'])\n          if(isAuthenticated)\n            return true\n          else\n            return this.router.createUrlTree(['/authentication'])\n        }\n      ))\n      \n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, exhaustMap } from 'rxjs/operators'\nimport { AuthenticationService } from '../authentication/authentication.service'\n\n@Injectable()\nexport class AuthenticationInterceptor implements HttpInterceptor {\n\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return this.authenticationService.isUserAuthenticated.pipe(\n      take(1), \n      exhaustMap(isAuthenticate => {\n        if(isAuthenticate)\n        {\n          const modifiedUrl = request.clone({\n            headers: request.headers.append('Authorization', this.authenticationService.user.token)\n          })\n          return next.handle(modifiedUrl)\n        }\n        return next.handle(request);\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../shared/user.model'\nimport { HttpClient } from '@angular/common/http'\nimport { tap, catchError } from 'rxjs/operators'\nimport { BehaviorSubject, throwError } from 'rxjs'\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User = null;\n  isUserAuthenticated = new BehaviorSubject<boolean>(false);\n  url: string = `/user`;\n  constructor(private http: HttpClient, \n              private router: Router) { }\n\n  signUp(values: {name: string ,email: string, password: string}) {\n    return this.http.post<User>(this.url + '/signup', {\n      name: values.name,\n      email: values.email,\n      password: values.password\n    })\n    .pipe(catchError(\n      (errorRes) => {\n        let errorMes = \"An unknown error occured\";\n        if(errorRes.status === 400)\n        {\n          if(errorRes.error.keyValue.name)\n            errorMes = \"Username already exists\"\n          else if(errorRes.error.keyValue.email)\n            errorMes = \"Email already registered\"  \n        }\n        return throwError(errorMes)\n      }\n    ))\n    .pipe( tap(\n      (responseData) => {\n        this.user = responseData\n        localStorage.setItem('userData', JSON.stringify(this.user))\n        this.isUserAuthenticated.next(true)\n      }\n    ))\n  }\n\n  login(values: {name: string, password: string}) {\n    return this.http.post<User>(this.url + '/login', {\n      name: values.name,\n      password: values.password\n    })\n    .pipe( catchError(\n      errorRes => {\n        let errorMes = \"An unknown error occured\";\n        if(errorRes.error.errorMes)\n          errorMes = errorRes.error.errorMes\n        return throwError(errorMes)  \n      }\n    ))\n    .pipe( tap(\n      resData => {\n        this.user = resData\n        localStorage.setItem('userData', JSON.stringify(this.user))\n        this.isUserAuthenticated.next(true)\n      }\n    ))\n  }\n\n  autoLogin(){\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    if(!userData) {\n      return\n    }\n    this.user = userData\n    this.isUserAuthenticated.next(true)\n    this.getUserinfo()\n  }\n\n  logout() {\n    this.http.post(this.url + '/logout',{})\n    .pipe( tap(\n      () => {\n        this.user = null\n        this.isUserAuthenticated.next(false)\n      }\n    ))\n    .subscribe(\n      () => {\n        localStorage.removeItem('userData')\n        this.router.navigate(['/authentication'])\n      }\n    )\n  }\n\n  getUserinfo() {\n    this.http.get<User>(this.url + '/')\n    .subscribe((userInfo) => {\n      this.user = userInfo\n    })\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  isAuthenticated = false;\n  subscription: Subscription;\n  userName: string = null\n  constructor(private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    \n    this.subscription = this.authenticationService.isUserAuthenticated.subscribe(\n      (isAuthenticate) => {\n        this.isAuthenticated = isAuthenticate\n        if(isAuthenticate)\n          this.userName = this.authenticationService.user.name\n      }\n    )\n  }\n\n  onLogout(){\n    this.authenticationService.logout()\n  }\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n}\n","<nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand\">CookIt</a>\n            <div class=\"collapse navbar-collapse\">\n                <ul class=\"nav navbar-nav header-item\">\n                    <li [routerLinkActive] = \"'active'\" *ngIf = \"isAuthenticated\">\n                        <a [routerLink] = \"['/recipes']\">Recipes</a>\n                    </li>\n                    <li [routerLinkActive] = \"'active'\" *ngIf = \"isAuthenticated\">\n                        <a [routerLink] = \"['/shopping-list']\">Shopping List</a>\n                    </li>\n                    <li routerLinkActive = \"active\" *ngIf = \"!isAuthenticated\">\n                        <a [routerLink] = \"['/authentication']\">Authenticate</a>\n                    </li>\n                    \n                </ul>\n                <ul class=\"nav navbar-nav navbar-right\">\n                    <li class=\"user text-muted\" *ngIf = \"isAuthenticated\">\n                        {{userName}}\n                    </li>\n                    <li style=\"cursor: pointer;\" *ngIf = \"isAuthenticated\">\n                        <a (click) = onLogout()>\n                            LogOut\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Ingrediant } from '../shared/ingrediant.model';\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\n\n@Component({\n  selector: 'app-purchased-ingred-list',\n  templateUrl: './purchased-ingred-list.component.html',\n  styleUrls: ['./purchased-ingred-list.component.css']\n})\nexport class PurchasedIngredListComponent implements OnInit {\n\n  ingrediants: Ingrediant[] = []\n  constructor(private shoppingListService: ShoppingListService) { }\n\n  ngOnInit(): void {\n    this.ingrediants = this.shoppingListService.getIngrediants()\n  }\n\n}\n","<h3 class=\"ordered\">Ordered</h3><div class=\"success\">\n<svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n    <circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\"/>\n    <path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<div class=\"list-group-item clearfix\"\n*ngFor = \"let ingrediant of ingrediants; let i = index\">\n{{ingrediant.name}} ({{ingrediant.amount}})\n</div>","\r\nexport class Comment{\r\n\r\n    constructor(public _id: string,\r\n                public author: string,\r\n                public data: string){}\r\n}","import { Component, Input, OnInit } from '@angular/core';\n\nimport { Comment } from '../../../comment.model'\n@Component({\n  selector: 'app-comment-item',\n  templateUrl: './comment-item.component.html',\n  styleUrls: ['./comment-item.component.css']\n})\nexport class CommentItemComponent implements OnInit {\n\n  @Input('comment') comment: Comment;\n  @Input('index') index: number;\n \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"list-group-item flex-column align-items-start\">\n    <div class=\"d-flex w-100 justify-content-between title\">\n      <b>{{comment.author}}</b>\n    </div>\n    <p class=\"mb-1\">{{comment.data}}</p>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { AuthenticationService } from 'src/app/authentication/authentication.service';\nimport { DataStoreService } from 'src/app/shared/data-store.service';\n\nimport { Comment } from '../../comment.model'\nimport { Recipe } from '../../recipe.model'\nimport { RecipeService } from '../../recipe.service';\n@Component({\n  selector: 'app-comment-list',\n  templateUrl: './comment-list.component.html',\n  styleUrls: ['./comment-list.component.css']\n})\nexport class CommentListComponent implements OnInit {\n\n  comments: Comment[] = []\n  @ViewChild('f') slsForm: NgForm;\n  commentNum: number;\n  recipeDetail: Recipe\n\n  constructor(private dataStoreService: DataStoreService, \n              private recipeService: RecipeService,  \n              private route: ActivatedRoute, \n              private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        let id = params['id'];\n        this.recipeDetail = this.recipeService.getRecipeByid(id);\n        this.comments = this.recipeDetail.comments\n        this.commentNum = this.comments.length\n      }\n    )\n    \n     this.recipeService.recipeCommentUpdated.subscribe(\n       (postedComments: Comment[]) => {\n          this.comments = postedComments\n          this.commentNum = this.comments.length \n       }\n     )\n  }\n  onSubmit(form: NgForm){\n    const value = form.value\n    const comment = new Comment('',this.authenticationService.user.name, value.data);\n    this.dataStoreService.postComment(comment,this.recipeDetail)\n    this.slsForm.reset();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form \n        (ngSubmit) = \"onSubmit(f)\" \n        #f = \"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 form-group\">\n                    <input \n                        type=\"text\" \n                        class=\"form-control\" \n                        name=\"data\" \n                        ngModel \n                        required\n                        placeholder=\"Add a Comment\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button \n                    type=\"submit\" \n                    class=\"btn btn-success\" \n                    [disabled] = \"!f.valid\"> Submit\n                </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n<br>\n<h4>Comments - {{commentNum}}</h4>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <app-comment-item *ngFor=\"let comment of comments; let i=index\" [comment] = comment [index] = i></app-comment-item>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport { ShoppingListService } from 'src/app/shopping-list/shopping-list.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\nimport { DataStoreService } from '../../shared/data-store.service'\nimport { AuthenticationService } from 'src/app/authentication/authentication.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n\n  recipeDetail: Recipe;\n  id: string;\n  count: number = 0;\n  bookmarked: boolean = false;\n  loggedInUser: string;\n  \n  constructor(private shoppingListService: ShoppingListService, \n    private dataStoreService: DataStoreService,\n    private route: ActivatedRoute, \n    private recipeService: RecipeService, \n    private router: Router, \n    private authenticationService: AuthenticationService\n    ) { }\n\n  ngOnInit(){\n    this.loggedInUser = this.authenticationService.user.name\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.id = params['id'];\n        this.recipeDetail = this.recipeService.getRecipeByid(this.id);\n        const resId = this.authenticationService.user.bookmarks.find(\n          (bookmark) => {\n            return bookmark.recipeBookmarkedid === this.recipeDetail._id\n          }\n        )\n       \n        if(resId)\n        {\n          this.bookmarked = true\n        }\n        else\n        {\n          this.bookmarked = false\n        }\n      }\n    )\n  }\n\n  addIngredToShopping(){\n    this.shoppingListService.addIngrediants(this.recipeDetail.ingrediants);\n    this.router.navigate(['./shopping-list']);\n  }\n  editRecipe(){\n    this.router.navigate(['edit'], { relativeTo: this.route });\n  }\n  deleteRecipe(){\n    this.dataStoreService.deleteRecipe(this.recipeDetail)\n    this.router.navigate(['../'],{ relativeTo: this.route });\n  }\n  onbook(){\n    if(this.bookmarked)\n    {\n      this.bookmarked = !this.bookmarked;\n      this.dataStoreService.deleteBookmark(this.recipeDetail)\n    }\n    else{\n      this.bookmarked = !this.bookmarked;\n      this.dataStoreService.bookmarkRecipe(this.recipeDetail)\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <div class=\"bookmark\" style=\"cursor: pointer;\" (click) = \"onbook()\" \n        [ngStyle] = \"{background: bookmarked ? 'red' : 'black'}\"></div>\n        <img [src] = \"recipeDetail.imagePath\" [alt] = \"recipeDetail.name\" class=\"img-responsive\"\n         style=\"max-height: 300px;\">\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <h1>{{recipeDetail.name}}</h1>\n    </div>\n    <div class=\"col-xs-12 text-muted\">\n        <h4>Posted By:- {{recipeDetail.author}}</h4>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-2 col-xs-12\" *ngIf = \"loggedInUser === recipeDetail.author\">\n        <div class=\"btn-group\" appDropdown>\n            <button \n            class=\"btn btn-primary dropdown-toggle\" \n            type=\"button\">\n        Manage Recipe<span class=\"caret\"></span></button>\n        <ul class=\"dropdown-menu\">\n            <li><a style=\"cursor: pointer;\" (click) = editRecipe() >Edit Recipe</a></li>\n            <li><a style=\"cursor: pointer;\" (click) = deleteRecipe()>Delete Recipe</a></li>\n        </ul>\n        </div>\n    </div>\n    <div class=\"col-md-2 col-xs-12\">\n        <button class=\"btn btn-primary\" (click) = addIngredToShopping() style=\"cursor: pointer;\">Add to Shopping List</button>\n    </div>\n</div>\n<br>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <h4>Recipe:</h4>\n    </div>\n    <div class=\"col-xs-12\">\n        {{recipeDetail.recipeDetail}}\n    </div>\n</div>\n<br>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <span class=\"recipedetail\">Ingrediants Used:</span>\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\" \n            *ngFor = \"let ingrediant of recipeDetail.ingrediants\">{{ingrediant.name}} - {{ingrediant.amount}}</li>\n        </ul>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <app-comment-list></app-comment-list>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { DataStoreService } from 'src/app/shared/data-store.service';\nimport { AuthenticationService } from 'src/app/authentication/authentication.service';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n\n  id: string;\n  editMode: boolean = false;\n  recipeForm: FormGroup;\n\n  constructor(private activatedRoute: ActivatedRoute, \n    private recipeService: RecipeService,\n    private router: Router, \n    private dataStoreService: DataStoreService, \n    private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(\n      (params: Params) => {\n        this.id = params['id'];\n        this.editMode = params['id'] != undefined;\n        this.inItForm();\n      }\n    )\n  }\n\n  private inItForm(){\n    let name = '';\n    let author = '';\n    let imagePath = '';\n    let recipeDetail = '';\n    let recipeIngred = new FormArray([]);\n    if(this.editMode)\n    {\n      const recipe: Recipe = this.recipeService.getRecipeByid(this.id);\n      \n      name = recipe.name;\n      author = recipe.author\n      imagePath = recipe.imagePath;\n      recipeDetail = recipe.recipeDetail;\n      if(recipe.ingrediants)\n      {\n        for(let ingred of recipe.ingrediants)\n        {\n          recipeIngred.push(\n            new FormGroup({\n              'name': new FormControl(ingred.name,Validators.required),\n              'amount': new FormControl(ingred.amount,[Validators.required,Validators.pattern(/^[1-9]+[0-9]*$/)])\n            })\n          )\n        }\n      }\n    }\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(name,Validators.required),\n      'imagePath': new FormControl(imagePath,Validators.required),\n      'recipeDetail': new FormControl(recipeDetail,Validators.required),\n      'ingrediants': recipeIngred\n    })\n  }\n  get controls(){\n    return(( this.recipeForm.get('ingrediants') as FormArray ).controls);\n  }\n   onSubmit(){\n    \n    if(this.editMode)\n    {\n      const recipe = this.recipeService.getRecipeByid(this.id)\n      const editedRecipe = new Recipe(recipe._id,\n      this.recipeForm.get('name').value,\n      this.authenticationService.user.name,\n      this.recipeForm.get('imagePath').value,\n      this.recipeForm.get('recipeDetail').value,\n      this.recipeForm.get('ingrediants').value,\n      recipe.comments);\n\n      this.dataStoreService.updateRecipe(editedRecipe);\n    }\n    else  \n    {\n      const newRecipe = new Recipe('',\n      this.recipeForm.get('name').value,\n      this.authenticationService.user.name,\n      this.recipeForm.get('imagePath').value,\n      this.recipeForm.get('recipeDetail').value,\n      this.recipeForm.get('ingrediants').value,\n      []);\n      \n      this.dataStoreService.publishRecipe(newRecipe);  \n    }\n    \n    this.router.navigate(['../'],{ relativeTo: this.activatedRoute });\n   }\n\n  onAddIngred(){\n    (<FormArray>(this.recipeForm.get('ingrediants'))).push(\n      new FormGroup({\n        'name': new FormControl(null,Validators.required),\n        'amount': new FormControl(null,[Validators.required,Validators.pattern(/^[1-9]+[0-9]*$/)])\n      })\n    )\n  }\n  onCancel(){\n    this.router.navigate(['../'],{ relativeTo: this.activatedRoute });\n  }\n  onDeleteIngred(index: number){\n    (<FormArray>(this.recipeForm.get('ingrediants'))).removeAt(index)\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form [formGroup] = \"recipeForm\" (ngSubmit) = \"onSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button \n                    type=\"submit\" \n                    class=\"btn btn-success\" \n                    [disabled] = \"!recipeForm.valid\">Save</button>\n                    <button \n                    type=\"button\" \n                    class=\"btn btn-danger\" \n                    (click) = \"onCancel()\">Cancel\n                    </button>\n                </div>\n            </div><br>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label>Name\n                            <input \n                            type=\"text\" \n                            class=\"form-control\" \n                            formControlName = \"name\" \n                            placeholder=\"Recipe Name\">\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label>Image Path\n                            <input \n                            type=\"text\" \n                            class=\"form-control\" \n                            formControlName=\"imagePath\" \n                            placeholder=\"Image URL\">\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\" \n            *ngIf = \"recipeForm.get('imagePath').value\">\n                <div class=\"col-xs-12\">\n                    <img [src] = \"recipeForm.get('imagePath').value\" \n                    class=\"img-responsive\" \n                    style=\"margin-bottom: 30px;\"\n                    > \n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <div class=\"form-group\">\n                        <label>Description\n                            <textarea \n                            type=\"text\" \n                            class=\"form-control\" \n                            formControlName=\"recipeDetail\" \n                            rows=\"6\" \n                            cols=\"70\" \n                            placeholder=\"Recipe\"></textarea>\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\" \n                formArrayName = \"ingrediants\">\n                    <div class=\"row\" \n                    *ngFor = \"let ingredCtrl of controls; let i = index\" \n                    [formGroupName] = \"i\" \n                    style=\"margin-bottom: 10px;\">\n                        <div class=\"col-xs-8\">\n                            <input \n                            type=\"text\" \n                            class=\"form-control\" \n                            formControlName = \"name\" \n                            placeholder=\"Ingrediant Name\">\n                        </div>\n                        <div class=\"col-xs-2\">\n                            <input \n                            type=\"number\" \n                            class=\"form-control\" \n                            formControlName = \"amount\" \n                            placeholder=\"Quantity\">\n                        </div>\n                        <div class=\"col-xs-2\">\n                            <button \n                            class=\"btn btn-danger\" \n                            type=\"button\"\n                            (click) = \"onDeleteIngred(i)\">X</button>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button \n                    type=\"button\"\n                    class=\"btn btn-primary\" \n                    (click) = onAddIngred() \n                    style=\"margin-bottom: 30px;\">Add Ingrediant</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n\n  @Input('recipe') recipe: Recipe;\n  @Input('index') index: number;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a [routerLink] = \"[recipe._id]\" [routerLinkActive] = \"'active'\" \n     class=\"list-group-item clearfix\" \n     style=\"cursor: pointer;\">\n    <div class=\"pull-left\">\n        <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n        <p class=\"list-group-item-text\">Posted By:- {{ recipe.author }}</p>\n    </div>\n    <span class=\"pull-right\">\n        <img [src]=\" recipe.imagePath \" [alt]=\" recipe.name \" class=\"img-responsive\" style=\"max-height : 50px;\">\n    </span>\n</a>","import { Component, OnInit, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit,OnDestroy {\n\n  recipes: Recipe[] = [];\n  subscription: Subscription;\n  filterStr: string = \"All\"\n  constructor(private recipeService: RecipeService, \n    private activatedRoute: ActivatedRoute, \n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.recipes = this.recipeService.getRecipes();\n    this.subscription = this.recipeService.recipeListChanged.subscribe(\n      () => {\n        this.recipes = this.recipeService.getRecipes();\n      }\n    )\n    \n  }\n\n  addRecipe(){\n    this.router.navigate(['new'], { relativeTo: this.activatedRoute });\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <button class=\"btn btn-success\" (click) = addRecipe()>Add New Recipe</button>\r\n    </div>\r\n</div>\r\n<hr>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <label>Filter By: \r\n            <select [(ngModel)] = \"filterStr\" class=\"form-control\">\r\n                <option value=\"All\">All</option>\r\n                <option value=\"Bookmarked\">Bookmarked</option>\r\n            </select>\r\n    </label>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n         <app-recipe-item *ngFor =\"let recipe of recipes | filterBookmark: filterStr; let i = index\" [recipe] = recipe [index] = i></app-recipe-item>\r\n    </div>\r\n</div>","import { Ingrediant } from '../shared/ingrediant.model';\r\nimport { Comment } from '../recipes/comment.model'\r\n\r\nexport class Recipe{\r\n    \r\n    constructor(public _id: string,\r\n        public name: string,\r\n        public author: string,\r\n        public imagePath: string,\r\n        public recipeDetail: string,\r\n        public ingrediants: Ingrediant[],\r\n        public comments: Comment[]){\r\n       \r\n    }\r\n}","import { Recipe } from \"./recipe.model\";\r\nimport { Comment } from './comment.model';\r\nimport { Subject } from 'rxjs';\r\nexport class RecipeService{\r\n    // recipes: Recipe[] = [\r\n    //     new Recipe('',\r\n    //     'A Test Recipe 1',\r\n    //     '',\r\n    //     'https://c.pxhere.com/photos/79/70/blur_close_up_cooking_cuisine_delicious_dinner_dish_egg-1568675.jpg!d',\r\n    //     'This is a test 1',\r\n    //     [\r\n    //         new Ingrediant('','Meat',1),\r\n    //         new Ingrediant('','French Fries', 20)\r\n    //     ],\r\n    //     []),\r\n    //     new Recipe('',\r\n    //     'A Test Recipe 2',\r\n    //     '',\r\n    //     'https://c.ndtvimg.com/2019-10/7g6mck6g_biryani-badshah_625x300_25_October_19.jpg',\r\n    //     'This is a test 2',\r\n    //     [\r\n    //         new Ingrediant('','Meat',2),\r\n    //         new Ingrediant('','French Fries', 30)\r\n    //     ],\r\n    //     [])\r\n        \r\n    //   ];\r\n    recipes: Recipe[] = [];\r\n    recipeListChanged = new Subject();\r\n    recipeCommentUpdated = new Subject<Comment[]>()\r\n    getRecipes()\r\n    {\r\n      return this.recipes.slice();\r\n    }\r\n    getRecipe(id: number){\r\n        return this.recipes[id];\r\n    }\r\n    getRecipeByid(_id: string){\r\n        return this.recipes.find((recipe) => {\r\n            return recipe._id === _id\r\n        })\r\n    }\r\n    setRecipes(recipesFetched: Recipe[]){\r\n        this.recipes = recipesFetched;\r\n        this.recipeListChanged.next();\r\n    }\r\n    updateARecipe(updatedRecipe: Recipe) {\r\n        this.recipes.forEach((recipe, index) => {\r\n            if(recipe._id === updatedRecipe._id)\r\n            {\r\n                this.recipes[index] = updatedRecipe\r\n            }\r\n        })\r\n        this.recipeListChanged.next();\r\n    }\r\n    addARecipe(addedRecipe: Recipe) {\r\n        this.recipes.push(addedRecipe)\r\n        this.recipeListChanged.next()\r\n    }\r\n    deleteARecipe(deletedRecipe: Recipe) {\r\n        this.recipes = this.recipes.filter((recipe) => {\r\n            return recipe._id != deletedRecipe._id\r\n        })\r\n        this.recipeListChanged.next()\r\n    }\r\n    postAComment(postedComments: Comment[], updatedRecipeId: string) {\r\n\r\n        this.recipes.forEach((recipe, index) => {\r\n            if(recipe._id === updatedRecipeId)\r\n            {\r\n                this.recipes[index].comments = postedComments\r\n            }\r\n        })\r\n        \r\n        this.recipeCommentUpdated.next(postedComments)\r\n    }\r\n}","import { Injectable } from '@angular/core'\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router'\r\n\r\nimport { Recipe } from '../recipes/recipe.model'\r\nimport { RecipeService } from './recipe.service'\r\nimport { Observable } from 'rxjs'\r\nimport { DataStoreService } from '../shared/data-store.service'\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RecipesResolverService implements Resolve<Recipe[]>{\r\n    constructor(private dataStoreService: DataStoreService, \r\n        private recipeService: RecipeService){}\r\n\r\n    resolve(activatedRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Recipe[]> | Promise<Recipe[]> | Recipe[]{\r\n        const recipes = this.recipeService.getRecipes();\r\n        if(recipes.length==0)\r\n            return this.dataStoreService.fetchRecipes();\r\n        else    \r\n        {\r\n            console.log(\"Already Fetched\");\r\n            return recipes;\r\n        }    \r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes-start',\n  templateUrl: './recipes-start.component.html',\n  styleUrls: ['./recipes-start.component.css']\n})\nexport class RecipesStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 style=\"text-align: center;\">Please select a recipe</h2>","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from './recipe.model';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css'] , \n  providers: []\n})\nexport class RecipesComponent implements OnInit {\n\n  recipeDetails: Recipe;\n  constructor() { }\n\n  ngOnInit(): void {}\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-4\">\n        <app-recipe-list></app-recipe-list>\n    </div>\n    <div class=\"col-md-8\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, Input, Output, EventEmitter } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-alert',\r\n    styleUrls: ['alert.component.css'],\r\n    templateUrl: 'alert.component.html'\r\n})\r\nexport class AlertComponent {\r\n    @Input('message') message: string;\r\n    @Output() close = new EventEmitter();\r\n    onClose(){\r\n        this.close.emit();\r\n    }\r\n}","<div class=\"backdrop\">\r\n    <div class=\"alertmes\">\r\n        <p>{{ message }}</p>\r\n        <div class=\"alertac\">\r\n            <button class=\"alert-button btn btn-primary\" (click) = onClose()>Close</button>\r\n        </div>   \r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Recipe } from '../recipes/recipe.model'\nimport { Comment } from '../recipes/comment.model'\nimport { RecipeService } from '../recipes/recipe.service';\nimport { tap } from 'rxjs/operators'\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from './user.model'\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStoreService {\n\n  url: string = `/recipe`;\n  urlforBookmark: string = `/user`\n  constructor(private http: HttpClient, \n              private recipeService: RecipeService, \n              private authenticationService: AuthenticationService) { }\n\n  publishRecipe(recipe: Recipe) {\n    this.http.post<{recipe: Recipe, user: User}>(this.url, recipe\n      \n    )\n    .subscribe(\n      (responseData) => {\n        this.recipeService.addARecipe(responseData.recipe)\n        this.authenticationService.user = responseData.user\n      }\n    )\n  } \n  \n  fetchRecipes() {\n    return this.http.get<Recipe[]>(this.url)\n    .pipe( tap(\n      (responseData) => {\n        this.recipeService.setRecipes(responseData)\n      }\n    ))\n  }\n\n  updateRecipe(recipe: Recipe) {\n    const recipeId = recipe._id\n    this.http.patch<Recipe>(this.url + '/' + recipeId, recipe)\n    .subscribe(\n      (responseData) => {\n        this.recipeService.updateARecipe(responseData)\n      }\n    )\n  }\n\n  deleteRecipe(recipe: Recipe) {\n    const recipeId = recipe._id\n    this.http.delete<Recipe>(this.url + '/' + recipeId)\n    .subscribe(\n      (responseData) => {\n        this.recipeService.deleteARecipe(responseData)\n      }\n    )\n  }\n\n  postComment(comment: Comment, recipe: Recipe) {\n    const recipeId = recipe._id\n    this.http.post<Comment[]>(this.url + '/comment/' + recipeId, comment)\n    .subscribe(\n      (responseData) => {\n        this.recipeService.postAComment(responseData,recipeId)\n      }\n    )\n  }\n\n  bookmarkRecipe(recipe: Recipe) {\n    this.http.post<[{_id: string, recipeBookmarkedid: string}]>(this.urlforBookmark + '/bookmark', {\n      recipeBookmarkedid: recipe._id\n    })\n    .subscribe(\n      resData => {\n        this.authenticationService.user.bookmarks = resData\n      }\n    )\n  }\n\n  deleteBookmark(recipe: Recipe) {\n    this.http.delete<[{_id: string, recipeBookmarkedid: string}]>(this.urlforBookmark + '/bookmark/' + recipe._id)\n    .subscribe(\n      resData => {\n        this.authenticationService.user.bookmarks = resData\n      }\n    )\n  }\n}\n","import { Directive, ElementRef, Renderer2, OnInit, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective implements OnInit{\n\n  constructor(private elRef: ElementRef, private renderer: Renderer2) { }\n\n  ngOnInit(){\n\n  }\n  \n  @HostBinding('class.open') toggleOpen: boolean = false;\n  @HostListener('document:click',['$event']) toggle(event: Event){\n    this.toggleOpen = this.elRef.nativeElement.contains(event.target) ? !this.toggleOpen : false;\n  }\n  \n  \n  \n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Recipe } from '../recipes/recipe.model'\nimport { AuthenticationService } from '../authentication/authentication.service'\n\n@Pipe({\n  name: 'filterBookmark'\n})\nexport class FilterBookmarkPipe implements PipeTransform {\n\n  constructor(private authenticationService: AuthenticationService){}\n  transform(value: Recipe[], filterStr: string): any {\n    const userx = this.authenticationService.user\n    if(value.length === 0 || filterStr === \"All\")\n      return value;\n    const resultArray = [];  \n    for(let i=0; i<value.length; i++)\n    {\n      const recipe = userx.bookmarks.find(\n        (bookmark) => {\n          return bookmark.recipeBookmarkedid === value[i]._id\n        }\n      )\n      if(recipe)\n        resultArray.push(value[i])\n    }  \n    return resultArray\n  }\n\n}\n","export class Ingrediant{\r\n\r\n    constructor(public _id: string,\r\n        public name: string, \r\n        public amount: number){}\r\n\r\n}","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'app-loading-spinner',\r\n    template: '<div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>',\r\n    styleUrls: ['./loading-spinner.component.css']\r\n})\r\nexport class LoadingSpinnerComponent {\r\n\r\n}","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { ShoppingListService } from '../shopping-list.service';\nimport { NgForm } from '@angular/forms';\nimport { Ingrediant } from 'src/app/shared/ingrediant.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css']\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n\n  constructor(private shoppingListService: ShoppingListService) { }\n  editMode = false;\n  editingIngredIndex: number;\n  editSubscription: Subscription;\n  editedIngred: Ingrediant;\n  @ViewChild('f') slsForm: NgForm;\n\n  ngOnInit(): void {\n    this.editSubscription = this.shoppingListService.startedEditing.subscribe(\n      (index: number) => {\n        this.editMode = true;\n        this.editingIngredIndex = index;\n        this.editedIngred = this.shoppingListService.getIngrediant(index);\n        this.slsForm.setValue({\n          'name': this.editedIngred.name,\n          'amount': this.editedIngred.amount\n        });\n      }\n    )\n  }\n\n  onAddIngred(form: NgForm){\n    const value = form.value;\n    const ingrediant = new Ingrediant('',value.name,value.amount);\n\n    if(this.editMode)\n    {\n      this.shoppingListService.updateIngrediant(this.editingIngredIndex,ingrediant);\n      this.editMode = false;\n    }\n    else \n      this.shoppingListService.addIngrediant(ingrediant);\n    form.reset();  \n    \n  }\n  onIngredDelete(){\n    this.slsForm.reset();\n    this.shoppingListService.deleteIngrediant(this.editingIngredIndex);\n    this.editMode = false;\n  }\n  onClear(){\n    this.slsForm.reset();\n  }\n  ngOnDestroy(){\n    this.slsForm.reset();\n    this.editSubscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <form \n        (ngSubmit) = \"onAddIngred(f)\" \n        #f = \"ngForm\">\n            <div class=\"row\">\n                <div class=\"col-sm-4 form-group\">\n                    <label>Name<input \n                        type=\"text\" \n                        class=\"form-control\" \n                        name=\"name\" \n                        ngModel \n                        required \n                        placeholder=\"Ingrediant Name\"></label>\n                </div>\n                <div class=\"col-sm-2 form-group\">\n                    <label>Amount<input \n                        type=\"number\" \n                        class=\"form-control\" \n                        name=\"amount\" \n                        ngModel \n                        required \n                        [pattern] = \"'^[1-9]+[0-9]*$'\" \n                        placeholder=\"Quantity\"></label>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                    <button \n                    type=\"submit\" \n                    class=\"btn btn-success\" \n                    [disabled] = \"!f.valid\">{{ editMode? 'Update': 'Add' }}</button>\n                    <button \n                    type=\"button\" \n                    class=\"btn btn-danger\" \n                    (click) = \"onIngredDelete()\" \n                    *ngIf = \"editMode\">Delete</button>\n                    <button \n                    type=\"button\" \n                    class=\"btn btn-primary\" \n                    (click) = \"onClear()\" >Clear</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Ingrediant } from '../shared/ingrediant.model';\nimport { ShoppingListService } from \"./shopping-list.service\";\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css'] ,\n  providers: []\n})\nexport class ShoppingListComponent implements OnInit, OnDestroy {\n\n  ingrediants = [];\n  ingredChangedSubscription: Subscription;\n  constructor(private shoppingListService: ShoppingListService, \n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.ingrediants = this.shoppingListService.getIngrediants();\n    this.ingredChangedSubscription = this.shoppingListService.ingrediantChanged.subscribe(\n      (ingrediant: Ingrediant[]) => {\n        this.ingrediants = ingrediant;\n      }\n    )\n  }\n\n  ngOnDestroy(){\n    this.ingredChangedSubscription.unsubscribe()\n  }\n\n  onEditIngred(index: number){\n    this.shoppingListService.startedEditing.next(index);\n  }\n  onBuy(){\n    this.router.navigate(['/purchased']);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-xs-10\">\n        <app-shopping-edit></app-shopping-edit>\n        <hr>\n        <a class=\"list-group-item clearfix\" style=\"cursor: pointer;\"\n         *ngFor = \"let ingrediant of ingrediants; let i = index\" \n         (click) = \"onEditIngred(i)\">\n         {{ingrediant.name}} ({{ingrediant.amount}})\n        </a>\n        <div *ngIf = \"ingrediants.length!=0\">\n        <hr>\n        <button class=\"btn btn-primary\" (click) = \"onBuy()\">Buy Now</button>\n        </div>\n    </div> \n</div>","import { Ingrediant } from \"../shared/ingrediant.model\";\r\nimport { Subject } from 'rxjs';\r\nexport class ShoppingListService{\r\n\r\n    ingrediantChanged = new Subject<Ingrediant[]>();\r\n    startedEditing = new Subject<number>();\r\n    ingrediants: Ingrediant[] = []\r\n    \r\n      getIngrediants(){\r\n          return this.ingrediants.slice();\r\n      }\r\n      getIngrediant(index: number){\r\n        return this.ingrediants[index];\r\n      }\r\n      addIngrediant(ingred: Ingrediant){\r\n          this.ingrediants.push(ingred);\r\n            this.ingrediantChanged.next(this.ingrediants.slice());\r\n      }\r\n      updateIngrediant(index: number, newIngrediant: Ingrediant){\r\n        this.ingrediants[index] = newIngrediant;\r\n        this.ingrediantChanged.next(this.ingrediants.slice());\r\n      }\r\n      deleteIngrediant(index: number){\r\n        this.ingrediants.splice(index,1);\r\n        this.ingrediantChanged.next(this.ingrediants.slice());\r\n      }\r\n      addIngrediants(ingrediants: Ingrediant[]){\r\n        this.ingrediants.push(...ingrediants);\r\n        this.ingrediantChanged.next(this.ingrediants.slice());\r\n      }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}